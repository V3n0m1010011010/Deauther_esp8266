#include <ESP8266WiFi.h>
#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SH110X.h>
#include <IRremoteESP8266.h>
#include <IRrecv.h>
#include <IRutils.h> 
#include <user_config.h> 

#define i2c_Address 0x3c 
#define SCREEN_WIDTH 128
#define SCREEN_HEIGHT 64
#define OLED_RESET -1


Adafruit_SH1106G display = Adafruit_SH1106G(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, OLED_RESET);


const uint16_t kRecvPin = 14;
IRrecv irrecv(kRecvPin);
decode_results results;

static const unsigned char PROGMEM logo[] = {
  0x00, 0x00, 0x0c, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x70, 0x00, 0x00, 
    0x00, 0x00, 0x1e, 0x00, 0x00, 0x78, 0x00, 0x00, 0x00, 0x00, 0x3e, 0x00, 0x00, 0x7c, 0x00, 0x00, 
    0x00, 0x00, 0x37, 0x03, 0xe0, 0xec, 0x00, 0x00, 0x00, 0x00, 0x33, 0x3f, 0xfc, 0xcc, 0x00, 0x00, 
    0x00, 0x00, 0x73, 0xfc, 0x3f, 0xce, 0x00, 0x00, 0x00, 0x00, 0x71, 0xf0, 0x0f, 0x8e, 0x00, 0x00, 
    0x00, 0x00, 0x30, 0xf0, 0x0f, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x30, 0x70, 0x0e, 0x0c, 0x00, 0x00, 
    0x00, 0x00, 0x30, 0x60, 0x06, 0x0c, 0x00, 0x00, 0x00, 0x00, 0x38, 0x60, 0x06, 0x1c, 0x00, 0x00, 
    0x00, 0x00, 0x1d, 0xc0, 0x03, 0xb8, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xc0, 0x03, 0xf8, 0x00, 0x00, 
    0x00, 0x00, 0x1f, 0x00, 0x00, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x1c, 0x00, 0x00,
0x00, 0x00, 0x30, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x0f, 0x30, 0x00, 0x00, 0x0c, 0xf0, 0x00, 
    0x00, 0x7f, 0x30, 0x00, 0x00, 0x0c, 0xfe, 0x00, 0x00, 0xfb, 0x30, 0x00, 0x00, 0x0c, 0xdf, 0x00, 
    0x03, 0xc3, 0x30, 0x00, 0x00, 0x0c, 0xc3, 0xc0, 0x07, 0x03, 0x18, 0x00, 0x00, 0x18, 0xc0, 0xe0, 
    0x0e, 0x03, 0x18, 0x00, 0x00, 0x18, 0xc0, 0x70, 0x1c, 0x03, 0x9c, 0x00, 0x00, 0x39, 0xc0, 0x38, 
    0x18, 0x01, 0x8c, 0x00, 0x00, 0x31, 0x80, 0x18, 0x38, 0x01, 0xce, 0x00, 0x00, 0x73, 0x80, 0x1c, 
    0x30, 0x00, 0xc7, 0x00, 0x00, 0xe3, 0x00, 0x0c, 0x70, 0x00, 0xe3, 0x80, 0x01, 0xc7, 0x00, 0x0e, 
    0x60, 0x00, 0x71, 0xc0, 0x03, 0x8e, 0x00, 0x06, 0x60, 0x00, 0x3f, 0xf8, 0x1f, 0xfc, 0x00, 0x06, 
    0xe0, 0x00, 0x1f, 0x3f, 0xfc, 0xf8, 0x00, 0x07, 0xe0, 0x00, 0x0c, 0x0f, 0xf0, 0x30, 0x00, 0x03, 
    0xc0, 0x00, 0x1c, 0x00, 0x00, 0x38, 0x00, 0x03, 0xc0, 0x03, 0x98, 0x00, 0x00, 0x19, 0xc0, 0x03, 
    0xc0, 0x0f, 0xf8, 0x00, 0x00, 0x1f, 0xf0, 0x03, 0xff, 0x3e, 0xf0, 0x00, 0x00, 0x0f, 0x7c, 0xff,
0xff, 0xf0, 0x30, 0x00, 0x00, 0x0c, 0x0f, 0xff, 0x01, 0xe0, 0x30, 0x80, 0x01, 0x0c, 0x07, 0x80, 
    0x00, 0xe0, 0x31, 0xc0, 0x03, 0x8c, 0x07, 0x00, 0x00, 0x00, 0x31, 0xc0, 0x03, 0x8c, 0x00, 0x00, 
    0x00, 0x00, 0x31, 0xc0, 0x03, 0x8c, 0x00, 0x00, 0x00, 0x00, 0x31, 0xc0, 0x03, 0x8c, 0x00, 0x00, 
    0x00, 0x00, 0x31, 0xc0, 0x03, 0x8c, 0x00, 0x00, 0x00, 0x00, 0x31, 0xc0, 0x03, 0x8c, 0x00, 0x00, 
    0x00, 0x00, 0x31, 0xc0, 0x03, 0x8c, 0x00, 0x00, 0x00, 0x00, 0x31, 0xc0, 0x03, 0x8c, 0x00, 0x00, 
    0x00, 0x00, 0x31, 0xc0, 0x03, 0x8c, 0x00, 0x00, 0x00, 0x00, 0x31, 0xc1, 0x83, 0x8c, 0x00, 0x00, 
    0x00, 0x00, 0x39, 0xc1, 0x83, 0x9c, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xc1, 0x83, 0xf8, 0x00, 0x00, 
    0x00, 0x00, 0x0f, 0xc1, 0x83, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x01, 0xc1, 0x83, 0x80, 0x00, 0x00,
0x00, 0x00, 0x01, 0xc1, 0x83, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc1, 0x83, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x01, 0xc1, 0x83, 0x80, 0x00, 0x00, 0x00, 0x00, 0x01, 0xc1, 0x83, 0x80, 0x00, 0x00, 
    0x00, 0x00, 0x01, 0xc1, 0x83, 0x80, 0x00, 0x00, 0x00, 0x00, 0x01, 0xc1, 0x83, 0x80, 0x00, 0x00, 
    0x00, 0x00, 0x01, 0xc1, 0x83, 0x80, 0x00, 0x00, 0x00, 0x00, 0x01, 0xc1, 0x83, 0x80, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0xc1, 0x83, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe3, 0xc7, 0x00, 0x00, 0x00, 
    0x00, 0x00, 0x00, 0x7f, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3e, 0x7c, 0x00, 0x00, 0x00
};

int shift = 0;
int pointer = 0;
int first_item_pos = 0;
int SSID_counter = 0;
int id = 0;
bool isSelected = false;
String SSIDS[30];

uint8_t deauthPacket[26] = {
      /*  0 - 1  */ 0xC0, 0x00, //type, subtype c0: deauth (a0: disassociate)
      /*  2 - 3  */ 0x00, 0x00, //duration (SDK takes care of that)
      /*  4 - 9  */ 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,//reciever (target)
      /* 10 - 15 */ 0x00, 0x11, 0x22, 0x33, 0x44, 0x55, //source (ap)
      /* 16 - 21 */ 0x00, 0x11, 0x22, 0x33, 0x44, 0x55, //BSSID (ap)
      /* 22 - 23 */ 0x00, 0x01, //fragment & squence number
      /* 24 - 25 */ 0x01, 0x00 //reason code (1 = unspecified reason)
};

void setup()   {
  Serial.begin(300);
  delay(250);
  display.begin(i2c_Address, true);
  irrecv.enableIRIn();
  wifi_set_opmode(0x01);
  wifi_set_channel(1);
  delay(200);
  logoShow();
  scan();
  display.setTextSize(1);
}
void loop() {
  controls();
  delay(100);
  displayAll();
}